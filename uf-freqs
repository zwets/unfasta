#!/bin/sh
#
#  uf-freqs - Count frequencies in unfasta files
#  Copyright (C) 2016  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  This utility is part of http://io.zwets.it/unfasta

# Function to exit this script with an error message on stderr
err_exit() {
    echo "$(basename "$0"): $*" >&2
    exit 1
}

# Function to show usage information and exit
usage_exit() {
    echo "
Usage: $(basename $0) [OPTIONS] [FILE ...]

  Count frequencies of elements and percentage GC in each sequence in each
  unfasta FILE, or across all sequences.  If no FILE is present or FILE is
  '-', read standard input.

  Options
   -l, --length-only  Length only, no counts per element
   -t, --totals-only  Totals across all sequences only, not per sequence
   -i, --ignore-case  Count all lower case letters as upper case
" >&2
    exit ${1:-1}
}

# Parse options

LENGTH_ONLY=0
TOTALS_ONLY=0
IGNORE_CASE=0

while [ $# -ne 0 -a "$(expr "$1" : '\(.\)..*')" = "-" ]; do
    case $1 in
    -l|--l*) LENGTH_ONLY=1 ;;
    -t|--t*) TOTALS_ONLY=1 ;;
    -i|--i*) IGNORE_CASE=1 ;;
    -h|--h*) usage_exit 0 ;;
    *) usage_exit ;;
    esac
    shift || usage_exit
done

gawk -v OFS=' ' -v P="$(basename "$0")" -v LENGTH_ONLY=$LENGTH_ONLY -v TOTALS_ONLY=$TOTALS_ONLY -v IGNORE_CASE=$IGNORE_CASE '
BEGIN { PROCINFO["sorted_in"] = "@ind_str_asc" }
NR%2==1 && !TOTALS_ONLY { ID = gensub(/ .*/, "", 1, substr($0,2)) }
NR%2==0 {
    if (IGNORE_CASE) $0 = toupper($0)
    if (!TOTALS_ONLY) printf ID OFS length($0)
    if (!LENGTH_ONLY) {
        for (i=1; i<=length($0); ++i) freqs[substr($0,i,1)] += 1
        for (j in freqs) {
            totals[j] += freqs[j]
            if (index("cgCG",j)) gc += freqs[j]
            if (!TOTALS_ONLY) printf OFS j "=" freqs[j]
        }
        total_gc += gc
        if (!TOTALS_ONLY) printf OFS "GC=" int(1000 * gc / length($0))/10.0 "%%"
        delete freqs
        gc = 0
    }
    if (!TOTALS_ONLY) printf ORS
    grand_total += length($0)
}
END { 
    printf "TOTALS" OFS grand_total
    if (!LENGTH_ONLY) {
        for (j in totals) printf OFS j "=" totals[j]
        printf OFS "GC=" int(1000 * total_gc / grand_total)/10.0 "%%"
    }
    printf "\n"
} 
' "$@"

# vim: sts=4:sw=4:et:si:ai
