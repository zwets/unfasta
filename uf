#!/bin/sh
#
#  uf - Convert FASTA to unfasta format
#  Copyright (C) 2016  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Created on 2016-01-16

# Function to exit this script with an error message on stderr
err_exit() {
    echo "$(basename "$0"): $*" >&2
    exit 1
}

# Function to show usage information and exit
usage_exit() {
    echo "
Usage: $(basename $0) [OPTIONS] [FILE] ...
  
  Convert FILEs to unfasta format and write to standard output.  With no
  FILE or when FILE is '-', read standard input.  Unfasta is FASTA without
  the pesky line breaks.  All sequences become one-liners.
 
  Options
   -r, --revert  Revert unfasta to FASTA. 
        Break sequences at 80 chars.  However note that there is no need to
        revert unfasta 'back' to FASTA, as every unfasta file IS a FASTA
        file.  The 80 char limit is recommended only.

  This program strips whitespace including line breaks from the sequence
  lines, but leaves everything else intact.  Use uf-valid for validation.

  More information about the unfasta suite at http://io.zwets.it/unfasta.
" >&2
    exit ${1:-1}
}

# Parse options

unset REVERT

while [ $# -ne 0 -a "$(expr "$1" : '\(.\).*')" = "-" ]; do
    case $1 in
    -r|--revert)
        REVERT="true"
        ;;
    -h|--help)
        usage_exit 0
        ;;
    *) usage_exit
        ;;
    esac
    shift
done

if [ -n "$REVERT" ]; then
    awk -b -O -v WIDTH=80 '
    /^>/ 
    /^[^>]/ { for (i=1;i<=length();i+=WIDTH) { print substr($0,i,WIDTH); } }' "$@"
else
    awk -b -O 'BEGIN { ORS="" }
    /^>/    { if (NR!=1) print "\n"; print $0 "\n" }
    /^[^>]/ { gsub(/[[:space:]]/,""); print $0 }
    END { print "\n" }' "$@"
fi

